import streamlit as st
import openai
from PIL import Image, UnidentifiedImageError
import io
import os
from dotenv import load_dotenv
load_dotenv()
# Set your OpenAI API key
openai.api_key = os.getenv("DALLE_API_KEY")

def generate_image(prompt, size="1024x1024"):
    try:
        response = openai.Image.create(
            prompt=prompt,
            n=1,
            size=size
        )
        image_url = response['data'][0]['url']
        return image_url
    except Exception as e:
        return str(e)

def edit_image(image_file, prompt, size="1024x1024"):
    try:
        # Convert the uploaded image to PNG
        image = Image.open(image_file)
        image = image.convert("RGBA")  # Ensure the image has an alpha channel
        buffered = io.BytesIO()
        image.save(buffered, format="PNG")
        buffered.seek(0)
        
        response = openai.Image.create_edit(
            image=buffered,
            prompt=prompt,
            n=1,
            size=size
        )
        edited_image_url = response['data'][0]['url']
        return edited_image_url
    except UnidentifiedImageError:
        return "Uploaded file is not a valid image."
    except Exception as e:
        return str(e)

# Streamlit app
st.title("DALL-E Image Generator and Editor")

tab1, tab2 = st.tabs(["Generate Image", "Edit Image"])

# Tab 1: Generate Image
with tab1:
    st.header("Generate Image")
    st.write("Enter a description below, and DALL-E will generate an image for you!")

    # User input for generation
    user_prompt = st.text_area("Enter your image description:", "")
    image_size = st.selectbox("Select image size:", ["256x256", "512x512", "1024x1024"])

    # Generate image button
    if st.button("Generate Image", key="generate"):
        if user_prompt.strip() == "":
            st.warning("Please enter a valid description.")
        else:
            with st.spinner("Generating image..."):
                image_url = generate_image(user_prompt, image_size)
            if image_url.startswith("http"):
                st.image(image_url, caption="Generated by DALL-E", use_column_width=True)
            else:
                st.error(f"Error: {image_url}")

# Tab 2: Edit Image
with tab2:
    st.header("Edit Image")
    st.write("Upload an image and describe the edits you'd like DALL-E to make.")

    # User input for editing
    uploaded_image = st.file_uploader("Upload an image:", type=["jpeg", "jpg", "png"])
    edit_prompt = st.text_area("Describe the edits you want to make:", "")
    edit_size = st.selectbox("Select output image size:", ["256x256", "512x512", "1024x1024"])

    # Edit image button
    if st.button("Edit Image", key="edit"):
        if uploaded_image is None:
            st.warning("Please upload an image.")
        elif edit_prompt.strip() == "":
            st.warning("Please describe the edits you want to make.")
        else:
            with st.spinner("Editing image..."):
                edited_image_url = edit_image(uploaded_image, edit_prompt, edit_size)
            if edited_image_url.startswith("http"):
                st.image(edited_image_url, caption="Edited by DALL-E", use_container_width=True)
            else:
                st.error(f"Error: {edited_image_url}")

st.markdown("---")
st.write("Powered by OpenAI's DALL-E.")
